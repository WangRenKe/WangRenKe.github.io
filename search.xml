<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>jQuery对表单的操作及更多应用</title>
    <url>/2017/05/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
        <tag>表格</tag>
        <tag>表单验证</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云ECS安装部署nginx</title>
    <url>/2022/02/04/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2nginx/</url>
    <content><![CDATA[<h1 id="记录一下阿里云ECS部署nginx，以及一些小小的坑。对于本篇文章大家有不理解的可以留言或私信，大家一起探讨共同进步！"><a href="#记录一下阿里云ECS部署nginx，以及一些小小的坑。对于本篇文章大家有不理解的可以留言或私信，大家一起探讨共同进步！" class="headerlink" title="记录一下阿里云ECS部署nginx，以及一些小小的坑。对于本篇文章大家有不理解的可以留言或私信，大家一起探讨共同进步！"></a>记录一下阿里云ECS部署nginx，以及一些小小的坑。对于本篇文章大家有不理解的可以留言或私信，大家一起探讨共同进步！</h1><ol>
<li><p>肯定是要先买个服务器了，我只是想玩玩，就买最便宜的就好了，够用。<br>注意：买完需要重置一下密码，连接服务器需要输入密码；<br><img src="https://img-blog.csdnimg.cn/75aa9dfe4bbb49c29ef1e86821d696fd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5aSn546L5Zyo6Lev5LiK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
</li>
<li><p>使用<strong>Xshell</strong>和<strong>Xftp</strong>或者<strong>MobaXterm</strong>连接服务器。服务器的系统我选择的是centOS，这里我是用的是<code>MobaXterm</code>，注意ip地址一定是公网ip，端口一般情况下服务器都会默认配22端口，如果连不上，那么需要给服务器的安全组配置22端口规则；<br><img src="https://img-blog.csdnimg.cn/bef2778dd2234e87a578d05f77e16684.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5aSn546L5Zyo6Lev5LiK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d7d2b0dcb9b14defbcec8a2ecfa3c5a7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5aSn546L5Zyo6Lev5LiK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
</li>
</ol>
<ol start="3">
<li>连接服务器成功之后，下面就是安装nginx了。</li>
</ol>
<p><strong>3.1</strong> 需要先安装几个nginx需要用到的依赖吧算是<br><code>3.1.1 先安装gcc-c++编译器  OpenSSL------</code> ==yum install gcc-c++== <code>--------</code> ==yum install -y openssl openssl-devel==<br><code>3.1.2 再安装pcre包 ---------</code> ==yum install -y pcre pcre-devel==<br><code>3.1.3 再安装zlib包 ----------</code>  ==yum install -y zlib zlib-devel==<br><strong>3.2</strong> 下载和使用nginx，我是在官网直接下载最新的稳定版本，在服务器解压使用，下载nginx的网站 <a href="http://nginx.org/en/download.html">Nginx下载</a>，也可以直接命令下载 ==wget <a href="https://nginx.org/download/nginx-1.20.0.tar.gz==">https://nginx.org/download/nginx-1.20.0.tar.gz==</a><br> <code>3.2.1 上传至 /usr/local/ 文件夹下解压 ---------- 解压命令 </code> ==tar -zxvf nginx-1.20.0.tar.gz==<br> <code>3.2.1 进入安装目录 cd /usr/local/nginx-1.20.0 使用默认的配置 ./configure</code><br> <code>3.2.3 编译安装 ------  </code> ==make install==<br> <code>3.2.4 找到sbin目录，启动nginx，这里可以使用 </code> ==whereis nginx== <code>命令查找nginx路径，找到路径下的sbin会有一个可执行文件，执行了它就可以了，启动nginx</code> ==./nginx==<br> <img src="https://img-blog.csdnimg.cn/ab4741d33672447eb9c3d3079293d7cf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5aSn546L5Zyo6Lev5LiK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br> 4. 弄好之后，就可以访问我们的公网ip，就直接访问到nginx的成功页面了；然后就可以部署前端项目，结合nginx的配置玩一玩；<code>对了，这里有一个坑，就是nginx默认的是80端口，如果我们的服务器安全组不配置80端口，是访问不了的，需要设置一下；</code><br> <img src="https://img-blog.csdnimg.cn/f2079b7779374498bd37622c9ea09f9b.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/73ee797d5d95436091c9f9dd30bb63ef.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5aSn546L5Zyo6Lev5LiK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>阿里云ECS</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
</search>
